
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [Function: httpAdapter],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function] },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: 'application/json, text/plain, */*',
      'User-Agent': 'axios/0.27.2'
    },
    jar: CookieJar {
      rejectPublicSuffixes: true,
      enableLooseMode: false,
      allowSpecialUseDomain: false,
      store: { idx: {
        'app.quinyx.com': {
          '/': {
            QWFMSESSION: Cookie="QWFMSESSION=12139295e35cc84d5a39697183137e34; Path=/; Secure; HttpOnly; hostOnly=true; aAge=88ms; cAge=1310ms",
            qshard: Cookie="qshard=1; Path=/; Secure; HttpOnly; hostOnly=true; aAge=330ms; cAge=1310ms",
            SimpleSAMLSessionID: Cookie="SimpleSAMLSessionID=b231f00f174a51bfac2134900ed189a8; Path=/; Secure; HttpOnly; hostOnly=true; aAge=330ms; cAge=1142ms",
            SimpleSAMLAuthToken: Cookie="SimpleSAMLAuthToken=_99a58f577289328ca4a0102b7cfe000bbe0cc56a92; Path=/; Secure; HttpOnly; hostOnly=true; aAge=330ms; cAge=509ms",
            api_session: Cookie="api_session=0qZEAHE0b3GfHN1SIFpwyZ2yhhUpy8g0A4TGq9dk; Expires=Fri, 11 Nov 2022 12:55:11 GMT; Max-Age=604800; Path=/; Secure; HttpOnly; SameSite=Lax; hostOnly=true; aAge=88ms; cAge=88ms"
          }
        },
        'sts.max.se': {
          '/adfs': {
            MSISAuth: Cookie="MSISAuth=AAEAALsSRu6JYU1ilYzlunzrqAdeBNsfv+ZyxSGaGilR2NQXXziSijOqEitmXAll6Flxj04eKNnQFFvg26rDe/oPYdF+icoarFfQxKs2u61JHB0XEgBgdEk0IZ9PBljur5DI7iOEDz24C4wXdk3bqnFIFCezLPVmFZGTDQOjySzc9yOdwtsBFjVND2qHiLduDd0G+w8iyLklm014H9ZFuqj932bgm5uflLrh5SQVH0wkvvSYZbqMkyjU7EkLkSFEXKljnTl+TJLaqfakJ5dBOCuO7LTfIdfzGCln2+G1Qx38Z07cRi8dglBmy11vDD53d+GfvoS6uXjzglG81npV0/VJPQuQRGBie8FX/wUDTFyVhOj0S5h0oAEX4nHYbuApkBBjrQABAABShcWfSzjDui6cYc8C+yObNPkgfdvs+P40FcYdT4JCZESFDj+tsm7mCZKFhLkr4AGvpy9+HcEPWWDzpG63A11jvY9ntfUarEh8gtbH+3v4LVgX+OkY73bG5aYbDdyoqLATnOOHT/joEs7kDoLhgRnbrjmqYQKxbvedAz2Z2ZP3MhtwvEx+E0hv9i1nnRW/ELxXyUztPnrkLv4hXlvt1LpN+yNIVwf048w1C8mRcxyqSH5EKiYnV2hOrtXhNeyEgww0dpQoudtRHIeQwgbcaqNnEL9nsBSowjPvq99jxHZt2b3TIZM0WDcFkvIHsOlxHyym1+nRLsWv/mwPluTo4sNqYAMAAAmJE2/2eLyWjbvhevG2kQx2/VtTUrCQFZDblIV1I+qO8aARJmthBZuKW0KCzWcR/9PM0/THxlhsWOwLu8O5jxe5B5c1qKGM3gAKBfzHc8sVsk810IUZrkdl93jFrljUII7q7YUpcp4JpQzx7f9lhQhhf37rroLga5eLJ7RPzSJIXd0GFwp5topd+cIp651O+Oq0va5lNGaMVp1x4CH4GgjIUmMYzouXjjp+77NfqkcuKGlaSiuzRxGEhn/15p+IbqY+r8eEaDRkXKra6C3WEaq+iCmqZEZr1jHL0+3G/0GB7CExTtx+Mn60vhgFjq8js81lK4KCu5rAF0si/54JwLmI9de6hzHGslvpo+FEaboxecXmiHJ7zES8wWt8lD5Y0WUF97KaLQllzNkAgZsfLBkWhMRIEK1pg6wtssp20mapLY5LV5Q/NBiJsucGMeGzqiKn8L1qxkmT7V3HAkNw5UNkcK3NKK3yEnY2u2q5JUxw1HxcBmVkBh4cJbL/4rcmxNR9WcA0KpiPMi+KqIMsQ/kB7yZU+mwueoe91wK5Y+4tRFH6xHQIlkTNhajVC3T7kwnlY/k3ERxsBAbwXakxvAjLErEBEeJvP/W9UjJGTAUfQHIPSKDAnlHXIb+mI0GsJp0o9Bv8dEv4gnPLs0Dw19nv0JIoMA3RAu6SMyaOY0q7MeIKae+rs6rBLWJ535lZeERZ637sYktI4nzuepsCx8tlM2jJDIVYzQiTQsyoDhqTXO8NAl+WNfUjR3dfnLcbhJ/dLguJQOFLgsBv8tK8zODzmoGGnsDG28Zy3zRrTUggzDEkWMDF98iYhUuskxUjEMLjP5grcPxu41j3qB3dP7Y6Z00amz3iv50uZyORbCdxI1gUPACnY3xHcqGeuXmrIWEgL3OwZVHZp8v/VZOP97DyKfMojvXfbGdpzADnz3c0Zi9b5An+ZlRKJA2sNg1z1tbBlyaHzzkfX+TULfZIy9LzZ3LCp4SJLv33fyB6YXFvo6K4W1opwQqp/dcN2pcrTARo1iDyNASYAT2vRFcPhewxhkCTega2gmyq4PVnDL4lj6zItefLX8gxArWUhokVFlIeW8MTY6kN0AHTwCVVgwwfJNfyt2Ny16gi5BMig0tZmKHf+8UJjDLHSs1JaOmRGQ==; Expires=Fri, 11 Nov 2022 12:55:11 GMT; Path=/adfs; Secure; HttpOnly; hostOnly=true; aAge=625ms; cAge=704ms",
            SamlSession: Cookie="SamlSession=aHR0cHMlM2ElMmYlMmZhcHAucXVpbnl4LmNvbSUyZnNpbXBsZXNhbWwlMmZtb2R1bGUucGhwJTJmc2FtbCUyZnNwJTJmbWV0YWRhdGEucGhwJTJmTUFYQlVSR0VSUyZGYWxzZSZqbjMyMzglNDBtYXguc2UmdXJuJTNhb2FzaXMlM2FuYW1lcyUzYXRjJTNhU0FNTCUzYTIuMCUzYW5hbWVpZC1mb3JtYXQlM2F0cmFuc2llbnQmJiYmX2VjNTdjMWY2LTljNjktNGU2Ny04NmYwLTM5MjU4NjEwZTAwYg==; Path=/adfs; Secure; HttpOnly; hostOnly=true; aAge=625ms; cAge=625ms",
            MSISAuthenticated: Cookie="MSISAuthenticated=MTEvNC8yMDIyIDEyOjU1OjExIFBN; Path=/adfs; Secure; HttpOnly; hostOnly=true; aAge=624ms; cAge=624ms",
            MSISLoopDetectionCookie: Cookie="MSISLoopDetectionCookie=MjAyMi0xMS0wNDoxMjo1NToxMVpcMQ==; Path=/adfs; Secure; HttpOnly; hostOnly=true; aAge=624ms; cAge=624ms"
          }
        },
        'quinyx.com': {
          '/': {
            'auth-prod': Cookie="auth-prod=MDAxOGxvY2F0aW9uIHF1aW55eC5jb20KMDAxNmlkZW50aWZpZXIgam4zMjM4CjAwMWJjaWQgZXhwaXJlcyAxNjY3NTY3MTExCjAwMmZzaWduYXR1cmUg5Ai5upPyUhYCG5_uF1XJWlDsvDkD4Mxzq8G7tAfP8YEK; Domain=quinyx.com; Path=/; HttpOnly; hostOnly=false; aAge=86ms; cAge=407ms"
          }
        }
      } },
      prefixSecurity: 'silent',
      _cloneSync: [Function (anonymous)],
      _importCookiesSync: [Function (anonymous)],
      getCookiesSync: [Function (anonymous)],
      getCookieStringSync: [Function (anonymous)],
      getSetCookieStringsSync: [Function (anonymous)],
      removeAllCookiesSync: [Function (anonymous)],
      setCookieSync: [Function (anonymous)],
      serializeSync: [Function (anonymous)]
    },
    method: 'get',
    url: 'https://web.quinyx.com/extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00',
    httpAgent: CookieAgent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 0,
      [Symbol(kCapture)]: false,
      [Symbol(cookieOptions)]: [Object]
    },
    httpsAgent: CookieAgent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(kCapture)]: false,
      [Symbol(cookieOptions)]: [Object]
    },
    data: undefined
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      prefinish: [Function: requestOnPrefinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'web.quinyx.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 10,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'web.quinyx.com',
      _readableState: [ReadableState],
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 55035,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object],
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'GET /extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00 HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'User-Agent: axios/0.27.2\r\n' +
      'Host: web.quinyx.com\r\n' +
      'Cookie: auth-prod=MDAxOGxvY2F0aW9uIHF1aW55eC5jb20KMDAxNmlkZW50aWZpZXIgam4zMjM4CjAwMWJjaWQgZXhwaXJlcyAxNjY3NTY3MTExCjAwMmZzaWduYXR1cmUg5Ai5upPyUhYCG5_uF1XJWlDsvDkD4Mxzq8G7tAfP8YEK\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: CookieAgent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(kCapture)]: false,
      [Symbol(cookieOptions)]: [Object]
    },
    socketPath: undefined,
    method: 'GET',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 401,
      statusMessage: 'Unauthorized',
      client: [TLSSocket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'https://web.quinyx.com/extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 18,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'web.quinyx.com',
    protocol: 'https:',
    _implicitHeader: [Function (anonymous)],
    emit: [Function (anonymous)],
    _redirectable: Writable {
      _writableState: [WritableState],
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 0,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://web.quinyx.com/extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'user-agent': [Array],
      host: [Array],
      cookie: [Array]
    }
  },
  response: {
    status: 401,
    statusText: 'Unauthorized',
    headers: {
      date: 'Fri, 04 Nov 2022 12:55:12 GMT',
      'content-type': 'application/json',
      'transfer-encoding': 'chunked',
      'cache-control': 'must-revalidate,no-cache,no-store',
      'strict-transport-security': 'max-age=15724800; includeSubdomains; preload',
      'x-frame-options': 'DENY',
      vary: 'Accept-Encoding',
      'x-quinyx-uid': '63650BAF23B1971BD84CD541032D',
      connection: 'close'
    },
    config: {
      transitional: [Object],
      adapter: [Function: httpAdapter],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object],
      jar: [CookieJar],
      method: 'get',
      url: 'https://web.quinyx.com/extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00',
      httpAgent: [CookieAgent],
      httpsAgent: [CookieAgent],
      data: undefined
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [TLSSocket],
      _header: 'GET /extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00 HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'User-Agent: axios/0.27.2\r\n' +
        'Host: web.quinyx.com\r\n' +
        'Cookie: auth-prod=MDAxOGxvY2F0aW9uIHF1aW55eC5jb20KMDAxNmlkZW50aWZpZXIgam4zMjM4CjAwMWJjaWQgZXhwaXJlcyAxNjY3NTY3MTExCjAwMmZzaWduYXR1cmUg5Ai5upPyUhYCG5_uF1XJWlDsvDkD4Mxzq8G7tAfP8YEK\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [CookieAgent],
      socketPath: undefined,
      method: 'GET',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/extapi/v1/schedule/shifts/by-group/215485?endDate=2022-11-05T06:00:00&startDate=2022-11-04T06:00:00',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'web.quinyx.com',
      protocol: 'https:',
      _implicitHeader: [Function (anonymous)],
      emit: [Function (anonymous)],
      _redirectable: [Writable],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    data: {
      timestamp: 1667566512031,
      status: 401,
      error: 'Unauthorized',
      path: '/v1/schedule/shifts/by-group/215485'
    }
  },
  page: '/api/getCredential'
}
wait  - compiling /_error (client and server)...
event - compiled client and server successfully in 61 ms (253 modules)
error - [AxiosError: Request failed with status code 500] {
  code: 'ERR_BAD_RESPONSE',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [Function: httpAdapter],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function] },
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/0.27.2',
      'Content-Length': 45
    },
    url: 'http://localhost:3200/api/getCredential',
    method: 'post',
    data: '{"userName":"jn3238","password":"m42823111D"}'
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      prefinish: [Function: requestOnPrefinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'localhost',
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 53062,
      [Symbol(kHandle)]: null,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 1700,
      [Symbol(kBytesWritten)]: 243,
      [Symbol(RequestTimeout)]: undefined
    },
    _header: 'POST /api/getCredential HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'User-Agent: axios/0.27.2\r\n' +
      'Content-Length: 45\r\n' +
      'Host: localhost:3200\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 4,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    path: '/api/getCredential',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 500,
      statusMessage: 'Internal Server Error',
      client: [Socket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'http://localhost:3200/api/getCredential',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 14,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(RequestTimeout)]: undefined
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'localhost',
    protocol: 'http:',
    _redirectable: Writable {
      _writableState: [WritableState],
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 45,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'http://localhost:3200/api/getCredential',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      host: [Array]
    }
  },
  response: {
    status: 500,
    statusText: 'Internal Server Error',
    headers: {
      'cache-control': 'no-store, must-revalidate',
      'x-powered-by': 'Next.js',
      'content-type': 'text/html; charset=utf-8',
      vary: 'Accept-Encoding',
      date: 'Fri, 04 Nov 2022 12:55:12 GMT',
      connection: 'close',
      'transfer-encoding': 'chunked'
    },
    config: {
      transitional: [Object],
      adapter: [Function: httpAdapter],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object],
      url: 'http://localhost:3200/api/getCredential',
      method: 'post',
      data: '{"userName":"jn3238","password":"m42823111D"}'
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: true,
      socket: [Socket],
      _header: 'POST /api/getCredential HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/0.27.2\r\n' +
        'Content-Length: 45\r\n' +
        'Host: localhost:3200\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/api/getCredential',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'localhost',
      protocol: 'http:',
      _redirectable: [Writable],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    data: '<!DOCTYPE html><html><head><style data-next-hide-fouc="true">body{display:none}</style><noscript data-next-hide-fouc="true"><style>body{display:block}</style></noscript><meta charSet="utf-8"/><meta name="viewport" content="width=device-width"/><meta name="next-head-count" content="2"/><noscript data-n-css=""></noscript><script defer="" nomodule="" src="/_next/static/chunks/polyfills.js?ts=1667566512160"></script><script src="/_next/static/chunks/webpack.js?ts=1667566512160" defer=""></script><script src="/_next/static/chunks/main.js?ts=1667566512160" defer=""></script><script src="/_next/static/chunks/pages/_app.js?ts=1667566512160" defer=""></script><script src="/_next/static/chunks/pages/_error.js?ts=1667566512160" defer=""></script><script src="/_next/static/development/_buildManifest.js?ts=1667566512160" defer=""></script><script src="/_next/static/development/_ssgManifest.js?ts=1667566512160" defer=""></script><noscript id="__next_css__DO_NOT_USE__"></noscript></head><body><div id="__next"></div><script src="/_next/static/chunks/react-refresh.js?ts=1667566512160"></script><script id="__NEXT_DATA__" type="application/json">{"props":{"pageProps":{"statusCode":500}},"page":"/_error","query":{"__NEXT_PAGE":"/api/getCredential"},"buildId":"development","isFallback":false,"err":{"name":"AxiosError","source":"server","message":"Request failed with status code 401"},"gip":true,"scriptLoader":[]}</script></body></html>'
  },
  page: '/'
}